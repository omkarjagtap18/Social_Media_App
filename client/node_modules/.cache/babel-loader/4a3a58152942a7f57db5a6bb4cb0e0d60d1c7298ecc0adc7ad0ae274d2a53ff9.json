{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Omkar\\\\Desktop\\\\SMA18\\\\sma-backend\\\\client\\\\src\\\\components\\\\comments\\\\Comments.jsx\",\n  _s = $RefreshSig$();\nimport { useContext, useState } from \"react\";\nimport \"./comments.scss\";\nimport { AuthContext } from \"../../context/authContext\";\nimport { useQuery, useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { makeRequest } from \"../../axios\";\nimport moment from \"moment\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Comments = _ref => {\n  _s();\n  let {\n    postId\n  } = _ref;\n  const [desc, setDesc] = useState(\"\");\n  const {\n    comment\n  } = useContext(AuthContext);\n  const {\n    isLoading,\n    error,\n    data\n  } = useQuery([\"comments\"], () => makeRequest.get(\"/comments?postId=\" + postId).then(res => {\n    return res.data;\n  }));\n  const queryClient = useQueryClient();\n  const mutation = useMutation(newComment => {\n    return makeRequest.post(\"/comments\", newComment);\n  }, {\n    onSuccess: () => {\n      // Invalidate and refetch\n      queryClient.invalidateQueries([\"comments\"]);\n    }\n  });\n  const handleClick = async e => {\n    e.preventDefault();\n    mutation.mutate({\n      desc,\n      postId\n    });\n    setDesc(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"comments\",\n    children: [error ? \"Something went wrong\" : isLoading ? \"loading\" : data.map(comment => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"write\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/upload/\" + comment.profilePic,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"write a comment\",\n        value: desc,\n        onChange: e => setDesc(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleClick,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)), error ? \"Something went wrong\" : isLoading ? \"loading\" : data.map(comment => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comment\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/upload/\" + comment.profilePic,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: comment.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: comment.desc\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"date\",\n        children: moment(comment.createdAt).fromNow()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(Comments, \"kenTmY+LNgTJYm651p/gMnEePqg=\", false, function () {\n  return [useQuery, useQueryClient, useMutation];\n});\n_c = Comments;\nexport default Comments;\nvar _c;\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"names":["useContext","useState","AuthContext","useQuery","useMutation","useQueryClient","makeRequest","moment","jsxDEV","_jsxDEV","Comments","_ref","_s","postId","desc","setDesc","comment","isLoading","error","data","get","then","res","queryClient","mutation","newComment","post","onSuccess","invalidateQueries","handleClick","e","preventDefault","mutate","className","children","map","src","profilePic","alt","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","target","onClick","name","createdAt","fromNow","_c","$RefreshReg$"],"sources":["C:/Users/Omkar/Desktop/SMA18/sma-backend/client/src/components/comments/Comments.jsx"],"sourcesContent":["import { useContext, useState } from \"react\";\r\nimport \"./comments.scss\";\r\nimport { AuthContext } from \"../../context/authContext\";\r\nimport { useQuery, useMutation, useQueryClient } from \"@tanstack/react-query\";\r\nimport { makeRequest } from \"../../axios\";\r\nimport moment from \"moment\";\r\n\r\nconst Comments = ({ postId }) => {\r\n  const [desc, setDesc] = useState(\"\");\r\n  const { comment } = useContext(AuthContext);\r\n\r\n  const { isLoading, error, data } = useQuery([\"comments\"], () =>\r\n    makeRequest.get(\"/comments?postId=\" + postId).then((res) => {\r\n      return res.data;\r\n    })\r\n  );\r\n\r\n  const queryClient = useQueryClient();\r\n\r\n  const mutation = useMutation(\r\n    (newComment) => {\r\n      return makeRequest.post(\"/comments\", newComment);\r\n    },\r\n    {\r\n      onSuccess: () => {\r\n        // Invalidate and refetch\r\n        queryClient.invalidateQueries([\"comments\"]);\r\n      },\r\n    }\r\n  );\r\n\r\n  const handleClick = async (e) => {\r\n    e.preventDefault();\r\n    mutation.mutate({ desc, postId });\r\n    setDesc(\"\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"comments\">\r\n      {error\r\n        ? \"Something went wrong\"\r\n        : isLoading\r\n        ? \"loading\"\r\n        : data.map((comment) => (\r\n            <div className=\"write\">\r\n              <img src={\"/upload/\" + comment.profilePic} alt=\"\" />\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"write a comment\"\r\n                value={desc}\r\n                onChange={(e) => setDesc(e.target.value)}\r\n              />\r\n              <button onClick={handleClick}>Send</button>\r\n            </div>\r\n          ))}\r\n      {error\r\n        ? \"Something went wrong\"\r\n        : isLoading\r\n        ? \"loading\"\r\n        : data.map((comment) => (\r\n            <div className=\"comment\">\r\n              <img src={\"/upload/\" + comment.profilePic} alt=\"\" />\r\n              <div className=\"info\">\r\n                <span>{comment.name}</span>\r\n                <p>{comment.desc}</p>\r\n              </div>\r\n              <span className=\"date\">\r\n                {moment(comment.createdAt).fromNow()}\r\n              </span>\r\n            </div>\r\n          ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Comments;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}